{"version":3,"sources":["webpack:///./src/components/PostsList/index.js","webpack:///./node_modules/path-browserify/index.js","webpack:///./src/components/Tags/index.js","webpack:///./src/getPrefixedPath.js","webpack:///./gatsby-config.js","webpack:///./src/pages/blog.js"],"names":["PostsList","posts","className","map","node","frontmatter","thumbnail","tags","title","slug","fields","excerpt","to","style","backgroundImage","getPrefixedPath","normalizeArray","parts","allowAboveRoot","up","i","length","last","splice","unshift","filter","xs","f","res","push","exports","resolve","resolvedPath","resolvedAbsolute","arguments","path","process","cwd","TypeError","charAt","split","p","join","normalize","isAbsolute","trailingSlash","substr","paths","Array","prototype","slice","call","index","relative","from","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","code","charCodeAt","hasRoot","matchedSlash","basename","ext","extname","startDot","startPart","preDotState","str","len","Tags","tag","pathPrefix","config","isDevelopment","GATSBY_ACTIVE_ENV","url","module","siteMetadata","require","plugins","options","shortname","__dirname","name","maxWidth","wrapperStyle","icon","short_name","start_url","background_color","theme_color","display","rule","include","BlogPage","data","site","description","edges","blogPosts","location","content"],"mappings":"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","file":"component---src-pages-blog-js-823308478764384f8123.js","sourcesContent":["import React from 'react';\nimport { Link } from \"gatsby\"\nimport Tags from '../Tags';\nimport getPrefixedPath from \"../../getPrefixedPath\"\nimport './style.scss';\n\nconst PostsList = ({ posts }) => (\n  <ul className=\"posts__container\">\n    {posts.map(({\n      node: {\n        frontmatter: { thumbnail, tags, title },\n        fields: { slug },\n        excerpt,\n      },\n    }) => (\n      <li>\n        <Link to={slug}>\n          <article className=\"posts__article\">\n            <div\n              className=\"posts__thumbnail\"\n              style={{ backgroundImage: `url(${getPrefixedPath(thumbnail)}` }}\n            />\n            <div>\n              <h2 className=\"posts__title\">{title}</h2>\n              <p>{excerpt}</p>\n              <Tags tags={tags} />\n            </div>\n          </article>\n          </Link>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default PostsList;\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  } // if the path is allowed to go above the root, restore leading ..s\n\n\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n} // path.resolve([from ...], to)\n// posix version\n\n\nexports.resolve = function () {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = i >= 0 ? arguments[i] : process.cwd(); // Skip empty and invalid entries\n\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  } // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n  // Normalize the path\n\n\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function (p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}; // path.normalize(path)\n// posix version\n\n\nexports.normalize = function (path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/'; // Normalize the path\n\n  path = normalizeArray(filter(path.split('/'), function (p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n}; // posix version\n\n\nexports.isAbsolute = function (path) {\n  return path.charAt(0) === '/';\n}; // posix version\n\n\nexports.join = function () {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function (p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n\n    return p;\n  }).join('/'));\n}; // path.relative(from, to)\n// posix version\n\n\nexports.relative = function (from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47\n  /*/*/\n  ;\n  var end = -1;\n  var matchedSlash = true;\n\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n\n    if (code === 47\n    /*/*/\n    ) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47\n    /*/*/\n    ) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n} // Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\n\n\nexports.basename = function (path, ext) {\n  var f = basename(path);\n\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true; // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n\n  var preDotState = 0;\n\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n\n    if (code === 47\n    /*/*/\n    ) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n\n        continue;\n      }\n\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n\n    if (code === 46\n    /*.*/\n    ) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n      } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot\n  preDotState === 0 || // The (right-most) trimmed path component is exactly '..'\n  preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n\n  return path.slice(startDot, end);\n};\n\nfunction filter(xs, f) {\n  if (xs.filter) return xs.filter(f);\n  var res = [];\n\n  for (var i = 0; i < xs.length; i++) {\n    if (f(xs[i], i, xs)) res.push(xs[i]);\n  }\n\n  return res;\n} // String.prototype.substr - negative index don't work in IE8\n\n\nvar substr = 'ab'.substr(-1) === 'b' ? function (str, start, len) {\n  return str.substr(start, len);\n} : function (str, start, len) {\n  if (start < 0) start = str.length + start;\n  return str.substr(start, len);\n};","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport './style.scss';\n\nconst Tags = ({ tags }) => (\n  <section className=\"tags__container\">\n    {tags.map((tag) => (\n      <Link\n        to={`/tags/${tag}`}\n        className=\"tags__link\"\n      >\n        {tag}\n      </Link>\n    ))}\n  </section>\n);\n\nexport default Tags;\n","import path from \"path\"\nimport config from \"../gatsby-config\"\nconst { pathPrefix } = config\n\nconst activeEnv =\n  process.env.GATSBY_ACTIVE_ENV || process.env.NODE_ENV || \"development\"\nconst isDevelopment = activeEnv === \"development\"\n\nconst getPrefixedPath = url => {\n  return isDevelopment ? url : path.join(pathPrefix, url)\n}\nexport default getPrefixedPath","module.exports = {\n  siteMetadata: require('./site-meta-data.json'),\n  pathPrefix: \"/cds.blog\",\n  plugins: [\n    {\n      resolve: `gatsby-plugin-disqus`,\n      options: {\n          shortname: `creativedatasolutions-github-io`\n      }\n    },\n    {\n      resolve: 'gatsby-source-filesystem',\n      options: {\n        path: `${__dirname}/content/blog`,\n        name: 'blog',\n      },\n    },\n    {\n      resolve: 'gatsby-source-filesystem',\n      options: {\n        path: `${__dirname}/content/assets`,\n        name: 'assets',\n      },\n    },\n    {\n      resolve: 'gatsby-transformer-remark',\n      options: {\n        plugins: [\n          {\n            resolve: 'gatsby-remark-images',\n            options: {\n              maxWidth: 630,\n            },\n          },\n          {\n            resolve: 'gatsby-remark-responsive-iframe',\n            options: {\n              wrapperStyle: 'margin-bottom: 1.0725rem',\n            },\n          },\n          'gatsby-remark-prismjs',\n          'gatsby-remark-copy-linked-files',\n          'gatsby-remark-smartypants',\n        ],\n      },\n    },\n    'gatsby-transformer-sharp',\n    'gatsby-plugin-sharp',\n    {\n      resolve: 'gatsby-plugin-google-analytics',\n      options: {\n        icon: 'content/assets/cds-createFileNodeFromBuffer.png',\n        // trackingId: `ADD YOUR TRACKING ID HERE`,\n      },\n    },\n    'gatsby-plugin-feed',\n    {\n      resolve: 'gatsby-plugin-manifest',\n      options: {\n        name: 'CDS - Creative Data Science Blog',\n        short_name: 'CDS Blog',\n        start_url: '/',\n        background_color: '#ffffff',\n        theme_color: '#663399',\n        display: 'minimal-ui',\n        icon: 'content/assets/cds_cloud.png',\n      },\n    },\n    {\n      resolve: 'gatsby-plugin-react-svg',\n      options: {\n        rule: {\n          include: /static/,\n        },\n      },\n    },\n    'gatsby-plugin-react-helmet',\n    'gatsby-plugin-offline',\n    'gatsby-plugin-netlify-cms',\n    'gatsby-plugin-sitemap',\n    'gatsby-plugin-sass',\n    'gatsby-plugin-dark-mode',\n  ],\n};\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport PostsList from '../components/PostsList';\nimport SEO from '../components/seo';\n\n\nconst BlogPage = ({\n  data: {\n    site: { siteMetadata: { title, description } },\n    blogPosts: { edges },\n  },\n  location,\n}) => (\n  <Layout location={location}>\n    <SEO title=\"All Posts\" />\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n    </Helmet>\n    <h2>Blog Posts &darr;</h2>\n    <PostsList posts={edges} />\n  </Layout>\n);\n\nexport default BlogPage;\n\nexport const pageQuery = graphql`\n  query blogPageQuery {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    blogPosts: allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            thumbnail\n            tags\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}