{"version":3,"sources":["webpack:///./src/components/PostsList/index.js","webpack:///./src/components/Tags/index.js","webpack:///./src/templates/tag.js"],"names":["PostsList","posts","className","map","node","frontmatter","thumbnail","tags","title","slug","fields","excerpt","href","style","backgroundImage","Tags","tag","to","TagTemplate","pageContext","data","location","site","blogPosts","tagsGroup","edges","totalCount","group","siteMetadata","tagHeader","description","name"],"mappings":"8FAAA,+CAkCeA,IA5BG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAChB,wBAAIC,UAAU,oBACXD,EAAME,KAAI,oBACTC,KADS,IAEPC,YAAeC,EAFR,EAEQA,UAAWC,EAFnB,EAEmBA,KAAMC,EAFzB,EAEyBA,MACtBC,EAHH,EAGPC,OAAUD,KACVE,EAJO,EAIPA,QAJO,OAOT,4BACE,uBAAGC,KAAMH,GACP,6BAASP,UAAU,kBACjB,yBACEA,UAAU,mBACVW,MAAO,CAAEC,gBAAgB,OAAQR,KAEnC,6BACE,wBAAIJ,UAAU,gBAAgBM,GAC9B,2BAAIG,GACJ,kBAAC,IAAD,CAAMJ,KAAMA,c,kCCzB1B,+CAkBeQ,IAbF,SAAC,GAAD,IAAGR,EAAH,EAAGA,KAAH,OACX,6BAASL,UAAU,mBAChBK,EAAKJ,KAAI,SAACa,GAAD,OACR,kBAAC,OAAD,CACEC,GAAE,SAAWD,EACbd,UAAU,cAETc,S,gFCZT,6IAQe,SAASE,EAAT,GAIX,IAHFC,EAGC,EAHDA,YACAC,EAEC,EAFDA,KACAC,EACC,EADDA,SAEQC,EAA+BF,EAA/BE,KAAMC,EAAyBH,EAAzBG,UAAWC,EAAcJ,EAAdI,UACjBR,EAAQG,EAARH,IAEAS,EAAsBF,EAAtBE,MAAOC,EAAeH,EAAfG,WACAnB,EAASiB,EAAhBG,MACAC,EAAiBN,EAAjBM,aAEFC,EAAeH,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEV,EAFF,IAIf,OACE,kBAAC,IAAD,CAAQK,SAAUA,GAChB,kBAAC,IAAD,CACEb,MAAUQ,EAAL,WACLc,YAAaD,IAEf,kBAAC,IAAD,KACE,+BACGD,EAAapB,OAEhB,0BAAMuB,KAAK,iBAEb,yBAAK7B,UAAU,uBACb,6BACE,4BACG2B,EACA,IAFH,KAKA,kBAAC,IAAD,CAAW5B,MAAOwB,IAClB,wBAAIvB,UAAU,YAAd,cACA,yBAAKA,UAAU,6BACb,kBAAC,IAAD,CAAMK,KAAMA,EAAKJ,KAAI,qBAAGa","file":"component---src-templates-tag-js-cf90a41cf396b49bef70.js","sourcesContent":["import React from 'react';\n\nimport Tags from '../Tags';\n\nimport './style.scss';\n\nconst PostsList = ({ posts }) => (\n  <ul className=\"posts__container\">\n    {posts.map(({\n      node: {\n        frontmatter: { thumbnail, tags, title },\n        fields: { slug },\n        excerpt,\n      },\n    }) => (\n      <li>\n        <a href={slug}>\n          <article className=\"posts__article\">\n            <div\n              className=\"posts__thumbnail\"\n              style={{ backgroundImage: `url(${thumbnail}` }}\n            />\n            <div>\n              <h2 className=\"posts__title\">{title}</h2>\n              <p>{excerpt}</p>\n              <Tags tags={tags} />\n            </div>\n          </article>\n        </a>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default PostsList;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport './style.scss';\n\nconst Tags = ({ tags }) => (\n  <section className=\"tags__container\">\n    {tags.map((tag) => (\n      <Link\n        to={`/tags/${tag}`}\n        className=\"tags__link\"\n      >\n        {tag}\n      </Link>\n    ))}\n  </section>\n);\n\nexport default Tags;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport PostsList from '../components/PostsList';\nimport SEO from '../components/seo';\nimport Tags from '../components/Tags';\n\nexport default function TagTemplate({\n  pageContext,\n  data,\n  location,\n}) {\n  const { site, blogPosts, tagsGroup } = data;\n  const { tag } = pageContext;\n\n  const { edges, totalCount } = blogPosts;\n  const { group: tags } = tagsGroup;\n  const { siteMetadata } = site;\n\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? '' : 's'\n  } tagged with \"${tag}\"`;\n\n  return (\n    <Layout location={location}>\n      <SEO\n        title={`${tag} | Posts`}\n        description={tagHeader}\n      />\n      <Helmet>\n        <title>\n          {siteMetadata.title}\n        </title>\n        <meta name=\"description\" />\n      </Helmet>\n      <div className=\"blog-post-container\">\n        <div>\n          <h2>\n            {tagHeader}\n            {' '}\n            &darr;\n          </h2>\n          <PostsList posts={edges} />\n          <h2 className=\"all-tags\">All Tags &darr;</h2>\n          <div className=\"post__tags tags-container\">\n            <Tags tags={tags.map(({ tag: tagName }) => tagName)} />\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query($tag: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    tagsGroup: allMarkdownRemark {\n      group(field: frontmatter___tags) {\n        tag: fieldValue\n      }\n    }\n    blogPosts: allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            thumbnail\n            tags\n          }\n          fields { \n            slug \n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}